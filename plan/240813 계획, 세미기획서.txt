
★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★★

<구현 순서>

★기본★
0. 기존 프로젝트 구조를 텍스트로 다 옮겨놓기
1. 옮겨진 텍스트를 기반으로 클래스 구조에 맞게 나누어서 의사코드를 구현해보기
ㄴ 프로그램이 제대로 동작하는지 확인하기
2. 플레이어, 상점, 인벤토리, 배틀에서 미구현인 부분 작성하기
ㄴ 배틀씬 기본 로직 만들기 [완성]
ㄴ 아이템과 인벤토리 구현하기 [완성]
ㄴ 상점 구현하기
3. 게임오버 씬 만들어서, 배틀에서 졌을경우 게임오버 씬으로 연결하기
4. 프로그램 목표(게임 엔딩) 설정하기 [진행중]
ㄴ 배틀씬에서 전리품을 얻게 한 다음, 상점에서 판매하여 1000골드를 모으면 게임종료

★기본+★
5. 팩토리 패턴, OOP의 이점을 살려서 코딩해보기
ㄴ 팩토리 패턴을 이용해 몬스터의 유형 다양화 시도
ㄴ 이때, 몬스터의 비슷한 특징은 인터페이스로 관리하기
ㄴ 확장메서드를 이용해서 플레이어의 특성 추가
ㄴ 플레이어와 인벤토리는 has관계이므로, 그럼 인벤토리씬에서 다룰 인벤토리 클래스를 새로 만들기 (파사드 패턴)
ㄴ 전투과정에서 델리게이트 이용해보기
ㄴ 삼항 연산자, ?연산자 이용해보기







★심화★ (시간 되면 순서대로 해보기)

6. 던전씬 n개 추가, 보스 전투씬 추가
ㄴ 플레이어에 int 레벨추가, 레벨에 따라 던전씬 입장 가능케하기
ㄴ 보스 처치시 게임종료로 2차 프로그램 엔딩(목표) 재설정

7. 상점에서 무기와 방어구 등 아이템 구매할 수 있게 목록 만들기 (자료구조 이용)
ㄴ 보스 전투씬 입장을 위한 key 아이템 제시 (게임 클리어를 위한 필수조건 추가)

8. 플레이어와 몬스터별 고유의 공격력/방어력을 계산하는 식을 만들어서 전투씬 퀄리티 높이기

9. 게임 저장 및 이어하기 기능 제작